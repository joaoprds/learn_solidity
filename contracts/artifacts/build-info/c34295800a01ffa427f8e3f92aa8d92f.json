{
	"id": "c34295800a01ffa427f8e3f92aa8d92f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Envia.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract envia {\r\n\r\n    constructor() payable {\r\n\r\n    }\r\n\r\n    function EnviaEtherTransfer() public {\r\n        payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).transfer(1 ether);\r\n\r\n    }\r\n\r\n    function enviaEtherSend() public returns(bool){\r\n        return payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).send(1 ether);\r\n    }\r\n\r\n    function enviaEtherCall() public returns(bool){\r\n        (bool retorna, ) = payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).call{value: 1 ether}(\"\");\r\n        return retorna;\r\n    }\r\n}\r\n\r\n/*\r\n    existe 3 formas de enviar ether para as contas :\r\n    Transfer:\r\n    send:\r\n    call:\r\n*/"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Envia.sol": {
				"envia": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EnviaEtherTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enviaEtherCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enviaEtherSend",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Envia.sol\":59:591  contract envia {\r... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Envia.sol\":59:591  contract envia {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x09e06c54\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13aeccf2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xaa2500f3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Envia.sol\":258:395  function enviaEtherSend() public returns(bool){\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Envia.sol\":403:588  function enviaEtherCall() public returns(bool){\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Envia.sol\":123:250  function EnviaEtherTransfer() public {\r... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/Envia.sol\":258:395  function enviaEtherSend() public returns(bool){\r... */\n    tag_7:\n        /* \"contracts/Envia.sol\":299:303  bool */\n      0x00\n        /* \"contracts/Envia.sol\":330:372  0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC */\n      0x0a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc\n        /* \"contracts/Envia.sol\":322:378  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Envia.sol\":322:387  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).send(1 ether) */\n      0x08fc\n        /* \"contracts/Envia.sol\":379:386  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Envia.sol\":322:387  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).send(1 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Envia.sol\":315:387  return payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).send(1 ether) */\n      swap1\n      pop\n        /* \"contracts/Envia.sol\":258:395  function enviaEtherSend() public returns(bool){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Envia.sol\":403:588  function enviaEtherCall() public returns(bool){\r... */\n    tag_11:\n        /* \"contracts/Envia.sol\":444:448  bool */\n      0x00\n        /* \"contracts/Envia.sol\":461:473  bool retorna */\n      dup1\n        /* \"contracts/Envia.sol\":487:529  0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC */\n      0x0a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc\n        /* \"contracts/Envia.sol\":479:535  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Envia.sol\":543:550  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Envia.sol\":479:555  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).call{value: 1 ether}(\"\") */\n      mload(0x40)\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_22\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_21)\n    tag_22:\n      0x60\n      swap2\n      pop\n    tag_21:\n      pop\n        /* \"contracts/Envia.sol\":460:555  (bool retorna, ) = payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).call{value: 1 ether}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Envia.sol\":573:580  retorna */\n      dup1\n        /* \"contracts/Envia.sol\":566:580  return retorna */\n      swap2\n      pop\n      pop\n        /* \"contracts/Envia.sol\":403:588  function enviaEtherCall() public returns(bool){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Envia.sol\":123:250  function EnviaEtherTransfer() public {\r... */\n    tag_14:\n        /* \"contracts/Envia.sol\":179:221  0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC */\n      0x0a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc\n        /* \"contracts/Envia.sol\":171:231  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Envia.sol\":171:240  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).transfer(1 ether) */\n      0x08fc\n        /* \"contracts/Envia.sol\":232:239  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Envia.sol\":171:240  payable(0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC).transfer(1 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"contracts/Envia.sol\":123:250  function EnviaEtherTransfer() public {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_27:\n        /* \"#utility.yul\":88:109   */\n      tag_29\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:520   */\n    tag_31:\n        /* \"#utility.yul\":281:284   */\n      0x00\n        /* \"#utility.yul\":302:385   */\n      tag_33\n        /* \"#utility.yul\":383:384   */\n      0x00\n        /* \"#utility.yul\":378:381   */\n      dup4\n        /* \"#utility.yul\":302:385   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":295:385   */\n      swap2\n      pop\n        /* \"#utility.yul\":394:487   */\n      tag_35\n        /* \"#utility.yul\":483:486   */\n      dup3\n        /* \"#utility.yul\":394:487   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":512:513   */\n      0x00\n        /* \"#utility.yul\":507:510   */\n      dup3\n        /* \"#utility.yul\":503:514   */\n      add\n        /* \"#utility.yul\":496:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":122:520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":526:905   */\n    tag_19:\n        /* \"#utility.yul\":710:713   */\n      0x00\n        /* \"#utility.yul\":732:879   */\n      tag_38\n        /* \"#utility.yul\":875:878   */\n      dup3\n        /* \"#utility.yul\":732:879   */\n      tag_31\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":725:879   */\n      swap2\n      pop\n        /* \"#utility.yul\":896:899   */\n      dup2\n        /* \"#utility.yul\":889:899   */\n      swap1\n      pop\n        /* \"#utility.yul\":526:905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":911:1121   */\n    tag_9:\n        /* \"#utility.yul\":998:1002   */\n      0x00\n        /* \"#utility.yul\":1036:1038   */\n      0x20\n        /* \"#utility.yul\":1025:1034   */\n      dup3\n        /* \"#utility.yul\":1021:1039   */\n      add\n        /* \"#utility.yul\":1013:1039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1049:1114   */\n      tag_40\n        /* \"#utility.yul\":1111:1112   */\n      0x00\n        /* \"#utility.yul\":1100:1109   */\n      dup4\n        /* \"#utility.yul\":1096:1113   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup5\n        /* \"#utility.yul\":1049:1114   */\n      tag_27\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":911:1121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1127:1274   */\n    tag_34:\n        /* \"#utility.yul\":1228:1239   */\n      0x00\n        /* \"#utility.yul\":1265:1268   */\n      dup2\n        /* \"#utility.yul\":1250:1268   */\n      swap1\n      pop\n        /* \"#utility.yul\":1127:1274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1280:1370   */\n    tag_30:\n        /* \"#utility.yul\":1314:1321   */\n      0x00\n        /* \"#utility.yul\":1357:1362   */\n      dup2\n        /* \"#utility.yul\":1350:1363   */\n      iszero\n        /* \"#utility.yul\":1343:1364   */\n      iszero\n        /* \"#utility.yul\":1332:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1280:1370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1376:1490   */\n    tag_36:\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206bfcfc44a0718558ba2234dde1a68756603e1c29e3c640fbd988e2ef1123413b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405261028b806100136000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806309e06c541461004657806313aeccf214610064578063aa2500f314610082575b600080fd5b61004e61008c565b60405161005b9190610220565b60405180910390f35b61006c6100e4565b6040516100799190610220565b60405180910390f35b61008a610174565b005b6000730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc73ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f19350505050905090565b600080730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc73ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400006040516101279061020b565b60006040518083038185875af1925050503d8060008114610164576040519150601f19603f3d011682016040523d82523d6000602084013e610169565b606091505b505090508091505090565b730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc73ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f193505050501580156101d6573d6000803e3d6000fd5b50565b6101e281610246565b82525050565b60006101f560008361023b565b915061020082610252565b600082019050919050565b6000610216826101e8565b9150819050919050565b600060208201905061023560008301846101d9565b92915050565b600081905092915050565b60008115159050919050565b5056fea26469706673582212206bfcfc44a0718558ba2234dde1a68756603e1c29e3c640fbd988e2ef1123413b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x28B DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E06C54 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x13AECCF2 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xAA2500F3 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x174 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD PUSH2 0x127 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x164 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x169 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E2 DUP2 PUSH2 0x246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5 PUSH1 0x0 DUP4 PUSH2 0x23B JUMP JUMPDEST SWAP2 POP PUSH2 0x200 DUP3 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216 DUP3 PUSH2 0x1E8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFCFC44A0718558BA2234DDE1 0xA6 DUP8 JUMP PUSH1 0x3E SHR 0x29 0xE3 0xC6 BLOCKHASH 0xFB 0xD9 DUP9 0xE2 0xEF GT 0x23 COINBASE EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "59:532:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EnviaEtherTransfer_17": {
									"entryPoint": 372,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enviaEtherCall_51": {
									"entryPoint": 228,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@enviaEtherSend_31": {
									"entryPoint": 140,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1493:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "295:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "378:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "383:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "302:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "295:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "483:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "394:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "394:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "496:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "507:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "496:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "273:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "281:3:1",
														"type": ""
													}
												],
												"src": "122:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "714:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "725:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "875:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "732:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "732:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "889:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "896:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "701:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "710:3:1",
														"type": ""
													}
												],
												"src": "526:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1003:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1013:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1025:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1013:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1087:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1100:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1111:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1096:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1049:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1049:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "975:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "987:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "998:4:1",
														"type": ""
													}
												],
												"src": "911:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1240:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1250:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1265:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1250:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1212:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1217:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1228:11:1",
														"type": ""
													}
												],
												"src": "1127:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1322:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1332:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1357:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1350:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1332:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1304:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1314:7:1",
														"type": ""
													}
												],
												"src": "1280:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1474:6:1",
														"type": ""
													}
												],
												"src": "1376:114:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806309e06c541461004657806313aeccf214610064578063aa2500f314610082575b600080fd5b61004e61008c565b60405161005b9190610220565b60405180910390f35b61006c6100e4565b6040516100799190610220565b60405180910390f35b61008a610174565b005b6000730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc73ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f19350505050905090565b600080730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc73ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a76400006040516101279061020b565b60006040518083038185875af1925050503d8060008114610164576040519150601f19603f3d011682016040523d82523d6000602084013e610169565b606091505b505090508091505090565b730a098eda01ce92ff4a4ccb7a4fffb5a43ebc70dc73ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f193505050501580156101d6573d6000803e3d6000fd5b50565b6101e281610246565b82525050565b60006101f560008361023b565b915061020082610252565b600082019050919050565b6000610216826101e8565b9150819050919050565b600060208201905061023560008301846101d9565b92915050565b600081905092915050565b60008115159050919050565b5056fea26469706673582212206bfcfc44a0718558ba2234dde1a68756603e1c29e3c640fbd988e2ef1123413b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E06C54 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x13AECCF2 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xAA2500F3 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x174 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD PUSH2 0x127 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x164 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x169 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH20 0xA098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E2 DUP2 PUSH2 0x246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5 PUSH1 0x0 DUP4 PUSH2 0x23B JUMP JUMPDEST SWAP2 POP PUSH2 0x200 DUP3 PUSH2 0x252 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216 DUP3 PUSH2 0x1E8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFCFC44A0718558BA2234DDE1 0xA6 DUP8 JUMP PUSH1 0x3E SHR 0x29 0xE3 0xC6 BLOCKHASH 0xFB 0xD9 DUP9 0xE2 0xEF GT 0x23 COINBASE EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "59:532:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;258:137;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;403:185;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;123:127;;;:::i;:::-;;258:137;299:4;330:42;322:56;;:65;379:7;322:65;;;;;;;;;;;;;;;;;;;;;;;315:72;;258:137;:::o;403:185::-;444:4;461:12;487:42;479:56;;543:7;479:76;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:95;;;573:7;566:14;;;403:185;:::o;123:127::-;179:42;171:60;;:69;232:7;171:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;123:127::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:398::-;281:3;302:83;383:1;378:3;302:83;:::i;:::-;295:90;;394:93;483:3;394:93;:::i;:::-;512:1;507:3;503:11;496:18;;122:398;;;:::o;526:379::-;710:3;732:147;875:3;732:147;:::i;:::-;725:154;;896:3;889:10;;526:379;;;:::o;911:210::-;998:4;1036:2;1025:9;1021:18;1013:26;;1049:65;1111:1;1100:9;1096:17;1087:6;1049:65;:::i;:::-;911:210;;;;:::o;1127:147::-;1228:11;1265:3;1250:18;;1127:147;;;;:::o;1280:90::-;1314:7;1357:5;1350:13;1343:21;1332:32;;1280:90;;;:::o;1376:114::-;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130200",
								"executionCost": "153",
								"totalCost": "130353"
							},
							"external": {
								"EnviaEtherTransfer()": "infinite",
								"enviaEtherCall()": "infinite",
								"enviaEtherSend()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 591,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 591,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 591,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 591,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 591,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 591,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 591,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bfcfc44a0718558ba2234dde1a68756603e1c29e3c640fbd988e2ef1123413b64736f6c63430008070033",
									".code": [
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "9E06C54"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "13AECCF2"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "AA2500F3"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 123,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 123,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 123,
											"end": 250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 123,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 123,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 123,
											"end": 250,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 299,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "A098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC"
										},
										{
											"begin": 322,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 322,
											"end": 378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 379,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "A098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC"
										},
										{
											"begin": 479,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 543,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 479,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 123,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 123,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 221,
											"name": "PUSH",
											"source": 0,
											"value": "A098EDA01CE92FF4A4CCB7A4FFFB5A43EBC70DC"
										},
										{
											"begin": 171,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 171,
											"end": 231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 232,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 171,
											"end": 240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 123,
											"end": 250,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 122,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 302,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 302,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 302,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 302,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 295,
											"end": 385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 295,
											"end": 385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 394,
											"end": 487,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 487,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 394,
											"end": 487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 512,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 503,
											"end": 514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 496,
											"end": 514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 496,
											"end": 514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 122,
											"end": 520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 122,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 526,
											"end": 905,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 526,
											"end": 905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 710,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 875,
											"end": 878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 732,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 732,
											"end": 879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 879,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 889,
											"end": 899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 889,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 526,
											"end": 905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 526,
											"end": 905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 526,
											"end": 905,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 911,
											"end": 1121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1127,
											"end": 1274,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1127,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1274,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1280,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1280,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1363,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1370,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1376,
											"end": 1490,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1376,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1490,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"EnviaEtherTransfer()": "aa2500f3",
							"enviaEtherCall()": "13aeccf2",
							"enviaEtherSend()": "09e06c54"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnviaEtherTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enviaEtherCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enviaEtherSend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Envia.sol\":\"envia\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Envia.sol\":{\"keccak256\":\"0x91ca79a2fd6d8c1d836b192281d1e22003b01470efd6d63d15040f2d1baec321\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1ccc09f95d3e642e3d7fd51e7d1a33c9d7f401230ff9709669fd3a2cc5f2a5\",\"dweb:/ipfs/QmdMxHx1o3VG1QXXWrAnVKdxAJMxQL3fmZHNPwbj4XaD3Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Envia.sol": {
				"ast": {
					"absolutePath": "contracts/Envia.sol",
					"exportedSymbols": {
						"envia": [
							52
						]
					},
					"id": 53,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "envia",
							"nameLocation": "68:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "105:10:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "94:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "105:0:0"
									},
									"scope": 52,
									"src": "83:32:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "160:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "232:7:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307830413039384564613031436539326666344134434362374134664646623541343345424337304443",
																	"id": 10,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "179:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "171:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 8,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "171:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "171:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "171:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "171:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "171:69:0"
											}
										]
									},
									"functionSelector": "aa2500f3",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "EnviaEtherTransfer",
									"nameLocation": "132:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:0:0"
									},
									"scope": 52,
									"src": "123:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "304:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "379:7:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307830413039384564613031436539326666344134434362374134664646623541343345424337304443",
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "330:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "322:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 22,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "322:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "322:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "322:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "322:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 21,
												"id": 29,
												"nodeType": "Return",
												"src": "315:72:0"
											}
										]
									},
									"functionSelector": "09e06c54",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enviaEtherSend",
									"nameLocation": "267:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "299:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:6:0"
									},
									"scope": 52,
									"src": "258:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "449:139:0",
										"statements": [
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "retorna",
														"nameLocation": "466:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "461:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "461:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 47,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "552:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "307830413039384564613031436539326666344134434362374134664646623541343345424337304443",
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "487:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "479:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 38,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "479:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "479:51:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "479:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"hexValue": "31",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "543:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															}
														],
														"src": "479:72:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "479:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "460:95:0"
											},
											{
												"expression": {
													"id": 48,
													"name": "retorna",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 35,
												"id": 49,
												"nodeType": "Return",
												"src": "566:14:0"
											}
										]
									},
									"functionSelector": "13aeccf2",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enviaEtherCall",
									"nameLocation": "412:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "444:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 33,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:6:0"
									},
									"scope": 52,
									"src": "403:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "59:532:0",
							"usedErrors": []
						}
					],
					"src": "32:660:0"
				},
				"id": 0
			}
		}
	}
}